/*
 * Prepay Balance Management
 * ## TMF API Reference: TMF654 - Prepay Balance Management  ### Draft : 19.5 - January 2020  The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, â€¦)  ### Resources - Bucket - TopupBalance - AdjustBalance - TransferBalance - ReserveBalance - AccumulatedBalance - BalanceActionHistory  ### Operations - Retrieve the balance information on a bucket for a given product (individual or aggregated). - Retrieve the list of balance-related operations performed over a given product - Retrieve information about all the top-up operations stored in the server filtered by some criteria. - Perform a new top up operation (recharge) - Retrieve detailed information about a top-up operation previously processed by the server. - Retrieve the current and historic status information about a top-up operation previously processed by the server. - Perform a new transfer operation - Retrieve information about all the transfer operations stored in the server filtered by some criteria - Retrieve detailed information about a transfer operation previously processed by the server - Retrieve the current and historic status information about a transfer operation previously processed by the server. - Retrieve information about all the adjustments stored in the server filtered by some criteria. - Perform a new adjustment operation - Retrieve detailed information about a balance adjustment operation previously processed by the server - Reserve a balance on a bucket. - Unreserve a balance on a bucket. - Retrieve aggregated (accumulative) balances for a bucket.
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AdjustBalanceCancelEvent;
import io.swagger.client.model.AdjustBalanceCreateEvent;
import io.swagger.client.model.AdjustBalanceFailureEvent;
import io.swagger.client.model.Error;
import io.swagger.client.model.EventSubscription;
import io.swagger.client.model.ReserveBalanceCancelEvent;
import io.swagger.client.model.ReserveBalanceCreateEvent;
import io.swagger.client.model.ReserveBalanceFailureEvent;
import io.swagger.client.model.TopupBalanceCancelEvent;
import io.swagger.client.model.TopupBalanceCreateEvent;
import io.swagger.client.model.TopupBalanceFailureEvent;
import io.swagger.client.model.TransferBalanceCancelEvent;
import io.swagger.client.model.TransferBalanceCreateEvent;
import io.swagger.client.model.TransferBalanceFailureEvent;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for NotificationListenersClientSideApi
 */
@Ignore
public class NotificationListenersClientSideApiTest {

    private final NotificationListenersClientSideApi api = new NotificationListenersClientSideApi();

    /**
     * Client listener for entity AdjustBalanceCancelEvent
     *
     * Example of a client listener for receiving the notification AdjustBalanceCancelEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToAdjustBalanceCancelEventTest() throws Exception {
        AdjustBalanceCancelEvent body = null;
        EventSubscription response = api.listenToAdjustBalanceCancelEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity AdjustBalanceCreateEvent
     *
     * Example of a client listener for receiving the notification AdjustBalanceCreateEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToAdjustBalanceCreateEventTest() throws Exception {
        AdjustBalanceCreateEvent body = null;
        EventSubscription response = api.listenToAdjustBalanceCreateEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity AdjustBalanceFailureEvent
     *
     * Example of a client listener for receiving the notification AdjustBalanceFailureEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToAdjustBalanceFailureEventTest() throws Exception {
        AdjustBalanceFailureEvent body = null;
        EventSubscription response = api.listenToAdjustBalanceFailureEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity ReserveBalanceCancelEvent
     *
     * Example of a client listener for receiving the notification ReserveBalanceCancelEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToReserveBalanceCancelEventTest() throws Exception {
        ReserveBalanceCancelEvent body = null;
        EventSubscription response = api.listenToReserveBalanceCancelEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity ReserveBalanceCreateEvent
     *
     * Example of a client listener for receiving the notification ReserveBalanceCreateEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToReserveBalanceCreateEventTest() throws Exception {
        ReserveBalanceCreateEvent body = null;
        EventSubscription response = api.listenToReserveBalanceCreateEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity ReserveBalanceFailureEvent
     *
     * Example of a client listener for receiving the notification ReserveBalanceFailureEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToReserveBalanceFailureEventTest() throws Exception {
        ReserveBalanceFailureEvent body = null;
        EventSubscription response = api.listenToReserveBalanceFailureEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity TopupBalanceCancelEvent
     *
     * Example of a client listener for receiving the notification TopupBalanceCancelEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToTopupBalanceCancelEventTest() throws Exception {
        TopupBalanceCancelEvent body = null;
        EventSubscription response = api.listenToTopupBalanceCancelEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity TopupBalanceCreateEvent
     *
     * Example of a client listener for receiving the notification TopupBalanceCreateEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToTopupBalanceCreateEventTest() throws Exception {
        TopupBalanceCreateEvent body = null;
        EventSubscription response = api.listenToTopupBalanceCreateEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity TopupBalanceFailureEvent
     *
     * Example of a client listener for receiving the notification TopupBalanceFailureEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToTopupBalanceFailureEventTest() throws Exception {
        TopupBalanceFailureEvent body = null;
        EventSubscription response = api.listenToTopupBalanceFailureEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity TransferBalanceCancelEvent
     *
     * Example of a client listener for receiving the notification TransferBalanceCancelEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToTransferBalanceCancelEventTest() throws Exception {
        TransferBalanceCancelEvent body = null;
        EventSubscription response = api.listenToTransferBalanceCancelEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity TransferBalanceCreateEvent
     *
     * Example of a client listener for receiving the notification TransferBalanceCreateEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToTransferBalanceCreateEventTest() throws Exception {
        TransferBalanceCreateEvent body = null;
        EventSubscription response = api.listenToTransferBalanceCreateEvent(body);

        // TODO: test validations
    }
    /**
     * Client listener for entity TransferBalanceFailureEvent
     *
     * Example of a client listener for receiving the notification TransferBalanceFailureEvent
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listenToTransferBalanceFailureEventTest() throws Exception {
        TransferBalanceFailureEvent body = null;
        EventSubscription response = api.listenToTransferBalanceFailureEvent(body);

        // TODO: test validations
    }
}
