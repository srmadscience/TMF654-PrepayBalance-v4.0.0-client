/*
 * Prepay Balance Management
 * ## TMF API Reference: TMF654 - Prepay Balance Management  ### Draft : 19.5 - January 2020  The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, â€¦)  ### Resources - Bucket - TopupBalance - AdjustBalance - TransferBalance - ReserveBalance - AccumulatedBalance - BalanceActionHistory  ### Operations - Retrieve the balance information on a bucket for a given product (individual or aggregated). - Retrieve the list of balance-related operations performed over a given product - Retrieve information about all the top-up operations stored in the server filtered by some criteria. - Perform a new top up operation (recharge) - Retrieve detailed information about a top-up operation previously processed by the server. - Retrieve the current and historic status information about a top-up operation previously processed by the server. - Perform a new transfer operation - Retrieve information about all the transfer operations stored in the server filtered by some criteria - Retrieve detailed information about a transfer operation previously processed by the server - Retrieve the current and historic status information about a transfer operation previously processed by the server. - Retrieve information about all the adjustments stored in the server filtered by some criteria. - Perform a new adjustment operation - Retrieve detailed information about a balance adjustment operation previously processed by the server - Reserve a balance on a bucket. - Unreserve a balance on a bucket. - Retrieve aggregated (accumulative) balances for a bucket.
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AdjustBalance;
import io.swagger.client.model.AdjustBalanceCreate;
import io.swagger.client.model.AdjustBalanceUpdate;
import io.swagger.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AdjustBalanceApi
 */
@Ignore
public class AdjustBalanceApiTest {

    private final AdjustBalanceApi api = new AdjustBalanceApi();

    /**
     * Creates a AdjustBalance
     *
     * This operation creates a AdjustBalance entity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAdjustBalanceTest() throws Exception {
        AdjustBalanceCreate body = null;
        AdjustBalance response = api.createAdjustBalance(body);

        // TODO: test validations
    }
    /**
     * Deletes a AdjustBalance
     *
     * This operation deletes a AdjustBalance entity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAdjustBalanceTest() throws Exception {
        String id = null;
        api.deleteAdjustBalance(id);

        // TODO: test validations
    }
    /**
     * List or find AdjustBalance objects
     *
     * This operation list or find AdjustBalance entities
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAdjustBalanceTest() throws Exception {
        String fields = null;
        Integer offset = null;
        Integer limit = null;
        List<AdjustBalance> response = api.listAdjustBalance(fields, offset, limit);

        // TODO: test validations
    }
    /**
     * Updates partially a AdjustBalance
     *
     * This operation updates partially a AdjustBalance entity.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void patchAdjustBalanceTest() throws Exception {
        AdjustBalanceUpdate body = null;
        String id = null;
        AdjustBalance response = api.patchAdjustBalance(body, id);

        // TODO: test validations
    }
    /**
     * Retrieves a AdjustBalance by ID
     *
     * This operation retrieves a AdjustBalance entity. Attribute selection is enabled for all first level attributes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void retrieveAdjustBalanceTest() throws Exception {
        String id = null;
        String fields = null;
        AdjustBalance response = api.retrieveAdjustBalance(id, fields);

        // TODO: test validations
    }
}
